# Prometheus configuration for API Threads Carousel Generator monitoring

global:
  # How frequently to scrape targets by default
  scrape_interval: 15s
  # How long until a scrape request times out
  scrape_timeout: 10s
  # How frequently to evaluate rules
  evaluation_interval: 15s
  
  # External labels to add to all metrics
  external_labels:
    cluster: 'carousel-api'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config
  - job_name: 'prometheus'
    # Override the global default and scrape targets from this job every 5 seconds
    scrape_interval: 5s
    static_configs:
      - targets: ['localhost:9090']

  # Carousel API metrics
  - job_name: 'carousel-api'
    scrape_interval: 15s
    scrape_timeout: 10s
    metrics_path: '/metrics'
    static_configs:
      - targets: 
          - 'carousel-api:5000'
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 'carousel-api:5000'

  # Nginx metrics (if nginx-prometheus-exporter is used)
  - job_name: 'nginx'
    scrape_interval: 15s
    static_configs:
      - targets: 
          - 'nginx:9113'
    metrics_path: '/metrics'

  # Node exporter for system metrics
  - job_name: 'node-exporter'
    scrape_interval: 15s
    static_configs:
      - targets: 
          - 'node-exporter:9100'

  # Redis metrics (if redis-exporter is used)
  - job_name: 'redis'
    scrape_interval: 15s
    static_configs:
      - targets: 
          - 'redis-exporter:9121'

  # Custom application metrics with detailed configuration
  - job_name: 'carousel-api-detailed'
    scrape_interval: 30s
    scrape_timeout: 15s
    metrics_path: '/api/v1/metrics'
    scheme: 'http'
    
    static_configs:
      - targets: ['carousel-api:5000']
        labels:
          service: 'carousel-generator'
          component: 'api'
          
    metric_relabel_configs:
      # Drop unwanted metrics
      - source_labels: [__name__]
        regex: 'go_.*'
        action: drop
      
      # Add custom labels
      - target_label: environment
        replacement: 'production'

  # Health check monitoring
  - job_name: 'health-checks'
    scrape_interval: 30s
    scrape_timeout: 10s
    metrics_path: '/health'
    scheme: 'http'
    
    static_configs:
      - targets: 
          - 'carousel-api:5000'
          - 'nginx:80'
          - 'redis:6379'
    
    # Custom health check metrics
    metric_relabel_configs:
      - source_labels: [__name__]
        target_label: health_check
        replacement: 'up'

# Remote write configuration (for long-term storage)
# remote_write:
#   - url: "https://prometheus-remote-write-endpoint.example.com/api/v1/write"
#     basic_auth:
#       username: "username"
#       password: "password"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500

# Remote read configuration
# remote_read:
#   - url: "https://prometheus-remote-read-endpoint.example.com/api/v1/read"
#     basic_auth:
#       username: "username"
#       password: "password"

# Storage configuration
storage:
  tsdb:
    # How long to retain samples in storage
    retention.time: 15d
    # Maximum size of storage
    retention.size: 10GB
    # Compress old chunks
    wal-compression: true
